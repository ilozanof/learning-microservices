
buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'maven-publish'


group = 'com.ilozanof.learning.microservices'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.0.1.RELEASE')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign:2.0.1.RELEASE')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.0.1.RELEASE')
	compile('org.springframework.cloud:spring-cloud-starter-hystrix:1.4.5.RELEASE')
}


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


task createClientJar(type: Zip) {
    dependsOn compileJava
    destinationDir = file("$rootDir/build")
    archiveName = rootProject.name + 'Client' + '-' + rootProject.version + '.jar'
    from sourceSets.main.output
    include 'com/ilozanof/learning/microservices/customerService/model/**/*'
    include 'com/ilozanof/learning/microservices/customerService/logic/**/*'
    include 'com/ilozanof/learning/microservices/customerService/client/**/*'
}

publishing {
	publications {
		serviceApp(MavenPublication) {
			from components.java
			groupId group
			artifactId project.name + 'App'
		}

		serviceClient(MavenPublication) {
			artifact 'build/' + rootProject.name + 'Client' + '-' + rootProject.version + '.jar'
			groupId group
			artifactId project.name + 'Client'
		}
	}
}